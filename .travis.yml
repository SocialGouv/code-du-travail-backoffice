language: node_js
node_js:
  - "12.13.1"

env:
  global:
    - API_PORT=3200
    - API_URI=http://localhost:3200
    - DATA_FILLER_PATH=/admin/data-filler
    - DB_PORT=5432
    - DB_URI=postgres://test_db_user:test_db_password@localhost:5432/test_db
    - KINTO_BUCKET=datasets
    - KINTO_URI=http://127.0.0.1:8888
    - NODE_ENV=test
    - PGRST_DB_ANON_ROLE=anonymous
    - PGRST_DB_SCHEMA=api
    # It must be at least 32 characters long:
    # https://github.com/PostgREST/postgrest/issues/977#issuecomment-329917367
    - PGRST_JWT_SECRET=a_test_only_postgrest_jwt_secret
    - POSTGRES_DB=test_db
    - POSTGRES_KINTO_DB=test_kinto_db
    - POSTGRES_PASSWORD=test_db_password
    - POSTGRES_USER=test_db_user
    - WEB_PORT=3100
    - WEB_URI=http://localhost:3100

cache:
  yarn: true
  directories:
    - nodes_modules
    - packages/contrib/nodes_modules

jobs:
  include:
    - stage: Test
      name: Unit Tests
      install:
        - cd packages/contrib
        - yarn --frozen-lockfile
      script:
        - yarn test --coverage --silent
      after_script:
        # Push tests coverage data to Coveralls:
        - ./node_modules/.bin/coveralls < ./coverage/lcov.info
        # Push tests coverage data to Codecov:
        - npx codecov

    - stage: Test
      name: E2E Tests
      services:
        - docker
      before_install:
        # Stop Travis out-of-the-box PostgreSQL services:
        - sudo service postgresql stop
        # Give execution rights to production script (used by "ci:test:e2e"):
        - sudo chmod +x ./scripts/prod/start.sh
      script:
        - yarn ci:test:e2e
      after_script:
        - docker-compose stop

notifications:
  email:
    on_failure: change
    on_success: never

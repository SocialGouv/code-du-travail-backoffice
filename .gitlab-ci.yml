---

stages:
  - Install
  # - Build
  - Test

Install:
  stage: Install
  image: node:10-alpine
  cache:
    key: $CI_COMMIT_REF_SLUG
  artifacts:
    expire_in: "1 day"
    paths:
      - .env
      - node_modules
      - packages/contrib/node_modules
  script:
    - yarn
    - yarn run lerna bootstrap
    # Generate the .env file:
    - yarn setup --env-only

Unit Tests:
  stage: Test
  image: node:10-alpine
  dependencies:
    - Install
  script:
    - yarn test -- --stream -- --coverage
  after_script:
    - npx codecov

E2E Tests:
  # TODO This stage should be split in 2 parts: build + push / tests.
  stage: Install
  image: docker/compose:1.24.0
  dependencies: []
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
  before_script:
    # Install Node and npm (which is not installed by default with nodejs)
    # https://superuser.com/a/1187246/441835
    - apk add --update nodejs nodejs-npm
    # Install Yarn
    - npm i -g yarn
    # Re-install packages correctly for this distribution
    - yarn
    # Generate the .env file:
    - yarn setup --env-only
    # Start DC images to run a local server instance (in the background):
    - chmod +x ./scripts/prod/start.sh
    - ./scripts/prod/start.sh
    # Seed database with dummy data
    - yarn db:seed
    - docker-compose build test
  script:
    - docker-compose up --exit-code-from test test
  after_script:
    - docker-compose stop

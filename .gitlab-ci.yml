---

# We use the docker-compose services names for the _URI hostnames because
# localhost is not available within the test container:
# https://docs.docker.com/compose/networking/
# https://docs.docker.com/compose/environment-variables/#the-env-file
variables:
  API_PORT: 3200
  API_URI: http://api:3000
  DB_PORT: 5432
  WEB_PORT: 3100
  WEB_URI: http://web:3100
  POSTGRES_DB: test_db
  POSTGRES_USER: test_db_user
  POSTGRES_PASSWORD: test_db_password
  PGRST_DB_ANON_ROLE: anonymous
  PGRST_DB_SCHEMA: api
  PGRST_DB_URI: postgres://test_db_user:test_db_password@localhost:5432/test_db
  PGRST_JWT_SECRET: postgrest_jwt_secret

stages:
  - Test

E2E Tests:
  stage: Test
  image: igabriele/docker-compose-puppeteer
  cache:
    key: one-key-to-rule-them-all
    paths:
    - node_modules/
  # We both need to add the docker:dind service and the DOCKER_DRIVER +
  # DOCKER_HOST variables to use docker-in-docker:
  # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-executor
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://localhost:2375
  before_script:
    - yarn
    # Start database:
    - docker-compose up -d db
    # Migrate database schema:
    - yarn db:migrate
    # Seed database with dummy data:
    - yarn db:seed
  script:
    # We need to raise the container error to fail the CI run if the tests fail:
    - docker-compose up --abort-on-container-exit --exit-code-from test test
  after_script:
    - docker-compose stop

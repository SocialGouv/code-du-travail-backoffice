version: "3.3"

services:
  db:
    container_name: cdtn_backoffice_db
    image: postgres:12-alpine
    restart: always
    env_file:
      - .env
    ports:
      - 3300:5432
    volumes:
      - postgre-data:/var/lib/postgresql/data
      - ./backups:/backups

  # https://postgrest.org/en/stable/install.html#containerized-postgrest-and-db-with-docker-compose
  postgrest:
    container_name: cdtn_backoffice_postgrest
    # image: postgrest/postgrest:v6.0.2
    image: hughjfchen/hughjfchen:postgrest-aarch64-6.0.2 # for arm64
    restart: always
    env_file:
      - .env
    environment:
      PGRST_DB_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - db

  api:
    container_name: cdtn_backoffice_api
    build:
      context: ./packages/api
    restart: always
    ports:
      - ${API_PORT}:${API_PORT}
    env_file:
      - .env
    environment:
      DB_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - postgrest

  app:
    container_name: cdtn_backoffice_app
    build:
      context: ./packages/app
    restart: always
    ports:
      - ${APP_PORT}:${APP_PORT}
    env_file:
      - .env
    environment:
      API_URI_DOCKER: http://api:${API_PORT}
      API_URI: http://localhost:${API_PORT}
      DB_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - api

  master:
    container_name: cdtn_backoffice_master
    # Keep the container up:
    # https://stackoverflow.com/a/55953120/2736233
    tty: true
    build:
      context: .
    environment:
      DB_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      NODE_ENV: ${NODE_ENV}
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - db

volumes:
  postgre-data:

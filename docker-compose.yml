version: "3"

services:
  db:
    image: igabriele/postgresql-jwt:12-alpine
    restart: always
    environment:
      # The JWT secret is used whithin the api.login() function:
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_KINTO_DB: ${POSTGRES_KINTO_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgre-data:/var/lib/postgresql/data
      - ./backups:/backups
      - ./scripts/docker/db:/scripts

  # TODO Secure Kinto in prod.
  kinto:
    image: kinto/kinto-server:13.6.2
    restart: always
    environment:
      KINTO_STORAGE_BACKEND: kinto.core.storage.postgresql
      KINTO_STORAGE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_KINTO_DB}
      KINTO_PERMISSION_BACKEND: kinto.core.permission.postgresql
      KINTO_PERMISSION_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_KINTO_DB}
      KINTO_BUCKET_CREATE_PRINCIPALS: system.Everyone
      KINTO_BUCKET_READ_PRINCIPALS: system.Everyone
    depends_on:
      - db

  # https://postgrest.org/en/stable/install.html#containerized-postgrest-and-db-with-docker-compose
  postgrest:
    image: postgrest/postgrest:v6.0.2
    restart: always
    environment:
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE}
      PGRST_DB_SCHEMA: ${PGRST_DB_SCHEMA}
      PGRST_DB_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
    depends_on:
      - db

  api:
    restart: always
    build:
      context: ./packages/api
      args:
        API_PORT: ${API_PORT}
        DB_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
        NODE_ENV: ${NODE_ENV}
        POSTGREST_URI: http://postgrest:3000
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      - postgrest

  web:
    restart: always
    build:
      context: .
      dockerfile: image.web.Dockerfile
      args:
        API_URI: ${API_SCHEME}://${API_DOMAIN}:${API_PORT_PUBLIC}
        API_URI_DOCKER: http://api:${API_PORT}
        DATA_FILLER_PATH: ${DATA_FILLER_PATH}
        DB_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
        NODE_ENV: ${NODE_ENV}
        KINTO_BUCKET: ${KINTO_BUCKET}
        KINTO_URI: http://kinto:8888
        WEB_PORT: ${WEB_PORT}
    ports:
      - ${WEB_PORT}:${WEB_PORT}
    depends_on:
      - api
      - kinto

  master:
    # Keep the container up:
    # https://stackoverflow.com/a/55953120/2736233
    tty: true
    build:
      context: .
      dockerfile: image.master.Dockerfile
    environment:
      DB_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      NODE_ENV: ${NODE_ENV}
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - db

volumes:
  postgre-data:

version: "3"

services:
  db:
    image: postgres:12-alpine
    restart: always
    environment:
      # The JWT secret is used whithin the api.login() function:
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgre-data:/var/lib/postgresql/data
      - ./backups:/backups

  # https://postgrest.org/en/stable/install.html#containerized-postgrest-and-db-with-docker-compose
  postgrest:
    image: postgrest/postgrest:v7.0.1
    restart: always
    environment:
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE}
      PGRST_DB_SCHEMA: ${PGRST_DB_SCHEMA}
      PGRST_DB_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
    depends_on:
      - db
    volumes:
      - ./postgrest.conf:/etc/postgrest.conf

  api:
    build:
      context: ./packages/api
      args:
        API_PORT: ${API_PORT}
        DB_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
        NODE_ENV: ${NODE_ENV}
        POSTGREST_URI: http://postgrest:3000
    restart: always
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      - postgrest

  app:
    build:
      context: ./packages/app
      args:
        API_DOMAIN: ${API_DOMAIN}
        API_PORT_PUBLIC: ${API_PORT_PUBLIC}
        API_SCHEME: ${API_SCHEME}
        API_URI_DOCKER: http://api:${API_PORT}
        CDTN_API_URL: ${CDTN_API_URL}
        DB_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
        NODE_ENV: ${NODE_ENV}
        APP_PORT: ${APP_PORT}
    restart: always
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      - api

  master:
    # Keep the container up:
    # https://stackoverflow.com/a/55953120/2736233
    tty: true
    build:
      context: .
    environment:
      DB_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      NODE_ENV: ${NODE_ENV}
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - db

volumes:
  postgre-data:
